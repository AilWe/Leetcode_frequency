/*
Given head which is a reference node to a singly-linked list. The value of each node in the linked list is either 0 or 1. The linked list holds the binary representation of a number.

Return the decimal value of the number in the linked list.
*/
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
    
public:
    int value = 0;
    int getDecimalValue(ListNode* head) {
        if(head!= NULL && head->next == NULL)
            value = value+head->val;
        else if(head!= NULL && head->next != NULL){
            value = (value+ head->val)*2;
        }
        if(head-> next != NULL){
        getDecimalValue(head->next);//search
        }
        return value;
    }
};
