/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    //Traverse Linked List and Delete In Place
    ListNode* deleteNodes(ListNode* head, int m, int n) {
        ListNode* currentNode = head;
        ListNode* lastNode = head;
        while(currentNode != nullptr){
            int mCount = m, nCount = n;
            while(currentNode != nullptr && mCount != 0){
                lastNode = currentNode;
                currentNode = currentNode-> next;
                mCount--;
            }
            while(currentNode != nullptr && nCount != 0){
                currentNode = currentNode-> next;
                nCount--;
            }
            lastNode -> next = currentNode;
        }
        return head;
    }
};
