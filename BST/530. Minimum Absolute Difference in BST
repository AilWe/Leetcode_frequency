/*Given a binary search tree with non-negative values, find the minimum absolute difference between values of any two nodes.*/
//vector
class Solution {
    
public:
    vector <int> vt;
    vector <int> inorder(TreeNode* root){
        if(root == NULL)
            return {};
        inorder(root->left);
        vt.push_back(root->val);
        inorder(root->right);
        return vt;
    }
    int getMinimumDifference(TreeNode* root) {
        vector <int> vtmain;
        vtmain = inorder(root);
        int diffmin = INT_MAX;
        for (int i = 0; i < vtmain.size()-1; i++){
            //cout << vtmain[i]<<endl;
            int diff = vtmain[i+1] - vtmain[i];
            //cout << diff << endl;
            if(diff<diffmin)
                diffmin = diff;
        }
        return diffmin;
    }
};
//recursive with inorder
class Solution {
    int minimul = INT_MAX;
    TreeNode* prev = NULL;
public:
    void inorder(TreeNode* root){
        if(root == NULL)
            return;
        inorder(root->left);
        if (prev != NULL)
            minimul = min(minimul, root->val - prev->val);
        prev = root;
        inorder(root->right);
    }
    int getMinimumDifference(TreeNode* root) {
        inorder(root);
        return minimul;
    }
};
