/*
Given a non-empty binary search tree and a target value, find the value in the BST that is closest to the target.
*/
//simple recursive
class Solution {
    float diffmin = FLT_MAX;
    int rootdf = -1;
public:
    int closestValue(TreeNode* root, double target) {
        if(root->left)
            closestValue(root->left, target);
        float diff = abs(root->val - target);
        if(diff <= diffmin){
            diffmin = diff;
            rootdf = root-> val;
            //cout << diffmin;
            //cout << root->val;
        }
        if(root -> right)
            closestValue(root -> right, target);
        return rootdf;
    }
};
//vector
