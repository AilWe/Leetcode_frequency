69. Sqrt(x)
Given a non-negative integer x, compute and return the square root of x.

Since the return type is an integer, the decimal digits are truncated, and only the integer part of the result is returned.
//Brute force
T:O(sqrt(x))
class Solution {
public:
    int mySqrt(int x) {
        if(x<=1) return x;
        for(int s=1; s<= x;++s)
            if(s>x/s) return s-1;
        return -1;
    }
};
class Solution {
public:
    int mySqrt(int x) {
        if(x<=1) return x;
        for(long long s=1; s<= x;++s)
            if(s*s>x) return s-1;
        return -1;
    }
};
//Binary search
//O(logx)
class Solution {
public:
    int mySqrt(int x) {
        int l = 1;
        int r = x;
        while(l<=r){
            int m = l+(r-l)/2;
            if(m>x/m)
                r = m-1;
            else
                l = m+1;
        }
        return l-1;
    }
};
//Newton's method
//O(logx)?
class Solution {
public:
    int mySqrt(int x) {
        double epsilon = 1e-2;
        double num = x;
        while(num*num - x > epsilon){
            num = (num + x / num) / 2.0;
        }
        return num;
    }
};
