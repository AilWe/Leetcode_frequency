35. Search Insert Position
Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.
// recursive dfs
class Solution {
public:
    int searchInsert(vector<int> &nums, int target, int l, int r){
        //cout << l << r << endl;
        int mid = l+(r-l)/2;
        //cout << mid;
        if(target < nums[l]){
            return l;
        }
        if(target > nums[r]){
            return r+1;
        }
        if(target == nums[mid]){
            return l+(r-l)/2;
        }
        else if(target < nums[mid]){
             return searchInsert(nums, target, l, mid-1);
        }
        else if(target > nums[mid]){
             return searchInsert(nums, target, mid + 1, r);
        }
        else
            return -1;
    }
    int searchInsert(vector<int>& nums, int target) {
        int start = 0;
        int end = nums.size() - 1;
        int ans = 0;
        ans = searchInsert(nums, target, start, end);
        return ans; 
    }
};
//
