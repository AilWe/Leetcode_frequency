704. Binary Search
Given a sorted (in ascending order) integer array nums of n elements and a target value, write a function to search target in nums. If target exists, then return its index, otherwise return -1.
class Solution {
//T: O(logn) S: O(1)
public:
    int search(vector<int>& nums, int target) {
        int l = 0;
        int r = nums.size();
        while(l<r){
            int m = l+(r-l)/2;
            if(nums[m] == target)
                return m;
            else if(nums[m] <target)
                l = m+1;
            else
                r = m;
        }
        return -1;
    }
};
//STL
class Solution {
public:
    int search(vector<int>& nums, int target) {
        auto it = lower_bound(nums.begin(), nums.end(), target);
        if(it == nums.end() || *it != target) return -1;
        return it - nums.begin();
    }
};
