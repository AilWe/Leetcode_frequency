//divide and conquer
分成两半，有一半排序过
findMin(array)
    if is_sorted(array):
        return array[0];
    return min(finMin(array[0:mid-1]). findMin(array[mid:n]))    
 例 4567012
 456（sort） 7012（no sort）
 4,        70(no sort),               12(sort)
 4,             0,                      1
 //Time Complexity: O(logn)
 //Space: 用指针，O（logn）
//Transverse to find the minimum number
//T: O(n)
class Solution {
public:
    int findMin(vector<int>& nums) {
        int min = INT_MAX;
        for (int i = 0; i< nums.size(); i++){
            if(nums[i]<min)
                min = nums[i];
        }
        return min;
        
    }
};
//sort then find
//T:O(n*logn)
class Solution {
public:
    int findMin(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        return nums[0];
        
    }
};
