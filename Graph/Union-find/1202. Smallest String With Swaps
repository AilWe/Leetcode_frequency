1202. Smallest String With Swaps
You are given a string s, and an array of pairs of indices in the string pairs where pairs[i] = [a, b] indicates 2 indices(0-indexed) of the string.

You can swap the characters at any pair of indices in the given pairs any number of times.

Return the lexicographically smallest string that s can be changed to after using the swaps.
class Solution {
public:
    string smallestStringWithSwaps(string s, vector<vector<int>>& pairs) {
        int n = s.length();
        vector<int> p(n);
        iota(p.begin(), p.end(), 0);
        function<int(int)> find = [&](int x) {
            return p[x] == x ? x : p[x] = find(p[x]);
        };      
        for(auto e: pairs){
            p[find(e[0])] = find(e[1]);
        }

        vector<vector<int>> idx(n);
        vector<string> ss(n);

        for(int i = 0; i<s.length();++i){
            int id = find(i);
            idx[id].push_back(i);
            ss[id].push_back(s[i]);
        }

        for(int i = 0; i<n;++i){
            sort(ss[i].begin(), ss[i].end());
            for(int k = 0; k < idx[i].size();++k){
                s[idx[i][k]] = ss[i][k];
            }
        }
        return s;
    }
};
