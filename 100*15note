1. Two sum：hashtable/two-point
2. Add Two Numbers: carry+digitfromlist1+digitfromlist2
3. Longest substring without repeating:
  1)Brute Force: bool allUnique(substring) set
                 transverse with allUnique
                 if true, update the maximum length
  2)Sliding window with hashset.
4. Median of Two Sorted Arrays: len(left_part) = len(right_part); max(left_part) <= min(right_part)
AB都分成等长地两部分，找到A[i-1]< B[j] && B[j-1]<A[i], A[i]太小，涨i减j,中位数是max(A[i-1], B[j-1]), max(A[i], B[j]))
5. Longest parlindromic substring: bool palindromic(substring) length(substring), transverse with bool; sliding window;
Dynamic programming: hashtable 存已经有的substring，查看是否在新的substring里；expandAroundCenter
6. Zigzag conversion: sort by row: iterate through s from left to right, append each char to the appropriate row
visit row: char in row 0, locate at k(2*numRow - 2); char in row 1, locate at k(2*numRows-2)+numRows-1; char in between
at k(2*numRows-2)+i and (k+1)(2*numRows-2)-i
7. reverse integer: pop and push
8. string to integer: scan from left to right to check valid number and sign
9. Palindrome Number: check the begin and end is same, or expandaroundcenter
10.Regular Expression Matching: recursive and dynamic programming
11. Container with most water: brute force; 
12. Interger to Roman: hashtable
13. Roman to Interger: consider all or hashtable
14: Longest Common Prefix: horizontal scan:挨个比较，看哪个common， common再和下个比较; vertical scan
Divide and conquer
15: 3 Sum: sort + two pointer; Hashset;hashmap
16. 3 Sum Closest: two pointer; binary search
17. Letter Combinations of a Phone Number: map
18. 4 sum: hashset; two pointer
19. Remove Nth Node From End of List: two pass: one pointer; one pass: two pointer
20. Valid Parentheses: stack
21: Merge Two Sorted Lists: recursive, iterasive two pointer
22: Generate Parentheses: backtracking;closure number
23: Merge k Sorted Lists: brute force; compare one by one; Priorityqueue
24. Swap Nodes in Pairs: recursive and iterasive
25. Reverse Nodes in k-Group: 先便利到第i个，然后指回去，然后让第一个指i+1
26. Remove Duplicates from Sorted Array：和后面相同就delete前一个，否则就保留。
27. Remove Element： two pointer
28. Implement strStr(): is substring is in str, return index; two pointer to get full match
29. Divide Two Integers: 用减法
30. Substring with Concatenation of All Words： 列举所有substring组合，然后比较， sliding window
31. Next Permutation: 从后往前找到第一个下降的元素，找到比他大的元素，交换
32. Longest Valid Parentheses： bool IsValid，寻找
33. 33. Search in Rotated Sorted Array



