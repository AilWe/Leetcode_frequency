992. Subarrays with K Different Integers
Given an array A of positive integers, call a (contiguous, not necessarily distinct) subarray of A good if the number of different integers in that subarray is exactly K.

(For example, [1,2,3,1,2] has 3 different integers: 1, 2, and 3.)

Return the number of good subarrays of A.
//Two pointers + indirection
//Let f(x) denote the number of subarrays with x or less distinct numbers
class Solution {
public:
    int subarraysWithKDistinct(vector<int>& A, int K) {
        //return the number of subarrays wiht k or less distinct numbers
        return subarrays(A, K) - subarrays(A, K-1);
    }
    int subarrays(vector<int> &A, int k){
        vector<int> count(A.size()+1);
        int ans = 0;
        int i = 0;
        for(int j = 0; j<A.size(); ++j){
            if(count[A[j]]++ == 0)
                --k;
            while(k<0)
                if(--count[A[i++]] == 0) ++k;
            ans += j - i +1;
        }
        return ans;
    }
};
