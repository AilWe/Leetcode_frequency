15. 3Sum
Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.
//Two pointer v2
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        const int n = nums.size();
        if(n<3) return {};
        sort(nums.begin(), nums.end());
        vector<vector<int>> ans;
        for(int i = 0; i < n-2; ++i){
            if(nums[i]>0) break;
            if(i>0 && nums[i] == nums[i-1]) continue;
            int target = 0-nums[i];
            int l = i+1;
            int r = nums.size() -1;
            while(l<r){
                if(nums[l]+nums[r] == target){
                    ans.push_back({nums[i],nums[l],nums[r]});
                    l++;
                    r--;
                    while(l<r && nums[l] == nums[l-1]) ++l;
                    while(l<r && nums[r] == nums[r+1]) --r;
                }
                else if (nums[l]+nums[r] < target)
                    ++l;
                else
                    --r;
            }
        }
        return ans;
    }
};
//Two pointer v1
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        if(nums.size()<3) return {};
        sort(nums.begin(), nums.end());
        set <vector<int>> ans;
        for(int i = 0; i < nums.size()-2; ++i){
            int target = 0-nums[i];
            int l = i+1;
            int r = nums.size() -1;
            while(l<r){
                if(nums[l]+nums[r] == target){

                    ans.insert({nums[i],nums[l],nums[r]});
                    l++;
                    r--;
                }
                else if (nums[l]+nums[r] < target)
                    l++;
                else
                    r--;
            }
        }
        return vector<vector<int>> (ans.begin(), ans.end());
    }
};
