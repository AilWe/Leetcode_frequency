167. Two Sum II â€“ Input array is sorted
Given an array of integers that is already sorted in ascending order, find two numbers such that they add up to a specific target number.

The function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2.
//Two pointers
class Solution {
public:
    //two point, if more then decrease a little, if less then increase a little
    vector<int> twoSum(vector<int>& numbers, int target) {
        int l = 0;
        int h = numbers.size() - 1; 
        while ( l <  h){
            int sum = numbers[l] + numbers[h]; 
            if(target == sum)
                break;
            else if (sum < target)
                l++;
            else
                h--;   
        }
        return {l+1, h+1};
    }    
};
//Binary Search
class Solution {
public:
    vector<int> twoSum(vector<int>& numbers, int target) {
        int n = numbers.size();
        for(int i = 0; i< n; i++){
            int l = i+1;
            int r = n;
            int t = target - numbers[i];
            while(l<r){
                int m = l+(r-l)/2;
                if (t == numbers[m]){
                    return {i+1, m+1};
                }
                if(t<numbers[m]){
                    r = m;
                }
                else
                    l= m+1;
            }
        }
        return {};
    }    
};
