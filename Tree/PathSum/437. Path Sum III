437. Path Sum III
You are given a binary tree in which each node contains an integer value.

Find the number of paths that sum to a given value.

The path does not need to start or end at the root or a leaf, but it must go downwards (traveling only from parent nodes to child nodes).

The tree has no more than 1,000 nodes and the values are in the range -1,000,000 to 1,000,000.
class Solution {
public:
    int pathSum(TreeNode* root, int sum) {
        if(!root)  return 0;
        return numberOfPaths(root, sum) + pathSum(root->left, sum) + pathSum(root->right, sum);
    }
private:
    int numberOfPaths(TreeNode* root, int left){
        if(!root) return 0;
        left = left - root->val;
        return (left == 0? 1:0) + numberOfPaths(root->left, left) + numberOfPaths(root->right,left);
    }
};
