/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<int> postorder(Node* root) {
        vector<int> ans;
        postorder(root, ans);
        return ans;
    }
    void postorder(Node* root, vector<int> &ans){
        if(root == 0) return;
        for(auto child: root->children){
            postorder(child, ans);
        }
        ans.push_back(root->val);
    }
};
class Solution {
public:
    vector<int> postorder(Node* root) {
        if(root == NULL) return {};
        deque<int> ans;
        stack<Node*> s;
        Node* curr = NULL;
        s.push(root);
        while(!s.empty()){
            curr = s.top();
            s.pop();
            //cout << curr->val;
            ans.push_front(curr->val);
            for(auto child:curr->children)
                s.push(child);
        }
        return vector<int> (ans.begin(), ans.end());
    }
};
