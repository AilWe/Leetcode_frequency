429. N-ary Tree Level Order Traversal
Given an n-ary tree, return the level order traversal of its nodes' values.

Nary-Tree input serialization is represented in their level order traversal, each group of children is separated by the null value (See examples).
/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        vector<vector<int>> ans;
        preorder(root, 0, ans);
        return ans;
    }
    void preorder(Node* root, int d, vector<vector<int>> &ans){
        if(root == NULL ) return;
        if(d>=ans.size())  ans.push_back({});
        ans[d].push_back(root->val);
        for(auto child: root->children){
            preorder(child, d+1, ans);
        }
    }
};
class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        if(root == NULL) return {};
        vector<vector<int>> ans;
        queue <Node*> q;
        q.push(root);
        int d = 0;
        while(!q.empty()){
            int size = q.size();
            ans.push_back({});
            while(size>0){
                Node* curr = q.front(); q.pop();
                ans[d].push_back(curr->val);
                for(auto child: curr->children){
                    q.push(child);
                }
                size--;
            }
            ++d;
        }
        return ans;
    }
};
