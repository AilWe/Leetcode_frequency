589. N-ary Tree Preorder Traversal
Given an n-ary tree, return the preorder traversal of its nodes' values.

Nary-Tree input serialization is represented in their level order traversal, each group of children is separated by the null value (See examples).

/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<int> preorder(Node* root) {
        vector<int> ans;
        preorder(root, ans);
        return ans;
    }
    void preorder(Node* root, vector<int> &ans){
        if(root == NULL) return;
        ans.push_back(root->val);
        for (auto child: root -> children){
            preorder(child, ans);
        }
    }
};

class Solution {
public:
    vector<int> preorder(Node* root) {
        if (root == NULL) return{};
        vector<int> ans;
        stack<Node*> s;
        Node* curr = NULL;
        s.push(root);
        while(!s.empty()){
            curr = s.top();
            s.pop();
            ans.push_back(curr->val);
            for(int i = curr->children.size() -1; i>=0; i--){
                s.push(curr->children[i]);
            }
        }
        return ans;
    }
};
