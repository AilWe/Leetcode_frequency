637. Average of Levels in Binary Tree
Given a non-empty binary tree, return the average value of the nodes on each level in the form of an array.
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        vector<double> ans;
        queue <TreeNode*> q;
        q.push(root);
        TreeNode* curr = NULL;
        while(!q.empty()){
            int size = q.size();
            int count = q.size();
            long sum = 0;
            while(count--){
                curr = q.front();
                q.pop();
                sum = sum + curr->val;
                if(curr->left) q.push(curr->left);
                if(curr->right) q.push(curr->right);
            }
            double levelans = double(sum)/double(size);
            ans.push_back(levelans);
        }
        return ans;
    }
};
