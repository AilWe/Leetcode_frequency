257. Binary Tree Paths
Given a binary tree, return all root-to-leaf paths.
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<string> binaryTreePaths(TreeNode* root) {
        vector<string> ans;
        //string s;
        preorder(root, 0, ans, "");
        return ans;
    }
    void preorder(TreeNode* root, int l, vector<string> &ans, string s){
        if(root == NULL) return;
        s += (l>0?"->":"")+to_string(root->val);
        if(!root->left && !root->right)
            ans.push_back(s);
        preorder(root->left, s.size(), ans, s);
        preorder(root->right, s.size(),ans, s);
        //while(s.size()!=1) s.pop_back();
    }
};
