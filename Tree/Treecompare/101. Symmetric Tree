101. Symmetric Tree
Given a binary tree, check whether it is a mirror of itself (ie, symmetric around its center).

For example, this binary tree [1,2,2,3,4,4,3] is symmetric:

class Solution {
public:
    bool isSymmetric(TreeNode* root) {
        return ismirror(root,root);
    }
    bool ismirror(TreeNode* root1, TreeNode* root2){
        if(!root1 && !root2) return true;
        if((!root1&&root2)||(!root2&&root1)) return false;
        if(root1->val != root2->val) return false;
        return ismirror(root1->left,root2->right) && ismirror(root1->right, root2->left);
    }
};
