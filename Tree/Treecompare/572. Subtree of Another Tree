572. Subtree of Another Tree
Given two non-empty binary trees s and t, check whether tree t has exactly the same structure and node values with a subtree of s. A subtree of s is a tree consists of a node in s and all of this node's descendants. The tree s could also be considered as a subtree of itself.
class Solution {
public:
    bool isSubtree(TreeNode* s, TreeNode* t) {
        if(s == NULL) return false;
        return isSame(s,t) || isSubtree(s->left,t)||isSubtree(s->right,t);
        
    }
    bool isSame(TreeNode* s, TreeNode*t){
        if(!s&&!t) return true;
        if((!s && t) || (!t &&s)) return false;
        if(s->val != t->val) return false;
        return isSame(s->left, t->left) && isSame(s->right, t->right);
    }
};
